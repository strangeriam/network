
## Throughput - TCP

Server
    iperf -s

Client
    iperf -c 192.168.1.1 (default is 10 seconds)
    iperf -c 192.168.1.1 -t 5
    iperf -P4 -c 192.168.1.1 -t 30 --bidir
    iperf -c 192.168.1.1 -w 100M -t 120 -i 5 -4
    iperf -c 192.168.1.1 -w 100M -t 120 -i 5 -4 -R


Other Throughput
    iperf -s -w 2m
    iperf –c 192.168.1.1 -t 30s -i 1s
    
    
## UDP

Server
    iperf -s -u -i 1 -p 521

Client
    iperf -u -c 192.168.1.1 -p 521 -b 1000m
    
## Option    
-c <server ip> | Server IP address
-u             | UDP (default is TCP)
-t 120         | continue time (120 seconds)
-i 5           | interval (5 seconds)
-4             | IPv4
-p 521         | port number 521
-b             | -b, --bandwidth
--bidir        | 雙向 bidirectional
-R             | Download (default is upload)

## IPerf Help
Usage: iperf [-s|-c host] [options]
       iperf [-h|--help] [-v|--version]

Server or Client:
  -p, --port      #         server port to listen on/connect to
  -f, --format    [kmgKMG]  format to report: Kbits, Mbits, KBytes, MBytes
  -i, --interval  #         seconds between periodic bandwidth reports
  -F, --file name           xmit/recv the specified file
  -B, --bind      <host>    bind to a specific interface
  -V, --verbose             more detailed output
  -J, --json                output in JSON format
  --logfile f               send output to a log file
  -d, --debug               emit debugging output
  -v, --version             show version information and quit
  -h, --help                show this message and quit
Server specific:
  -s, --server              run in server mode
  -D, --daemon              run the server as a daemon
  -I, --pidfile file        write PID file
  -1, --one-off             handle one client connection then exit
Client specific:
  -c, --client    <host>    run in client mode, connecting to <host>
  -u, --udp                 use UDP rather than TCP
  -b, --bandwidth #[KMG][/#] target bandwidth in bits/sec (0 for unlimited)
                            (default 1 Mbit/sec for UDP, unlimited for TCP)
                            (optional slash and packet count for burst mode)
  -t, --time      #         time in seconds to transmit for (default 10 secs)
  -n, --bytes     #[KMG]    number of bytes to transmit (instead of -t)
  -k, --blockcount #[KMG]   number of blocks (packets) to transmit (instead of -t or -n)
  -l, --len       #[KMG]    length of buffer to read or write
                            (default 128 KB for TCP, 8 KB for UDP)
  --cport         <port>    bind to a specific client port (TCP and UDP, default: ephemeral port)
  -P, --parallel  #         number of parallel client streams to run
  -R, --reverse             run in reverse mode (server sends, client receives)
  -w, --window    #[KMG]    set window size / socket buffer size
  -M, --set-mss   #         set TCP/SCTP maximum segment size (MTU - 40 bytes)
  -N, --no-delay            set TCP/SCTP no delay, disabling Nagle's Algorithm
  -4, --version4            only use IPv4
  -6, --version6            only use IPv6
  -S, --tos N               set the IP 'type of service'
  -Z, --zerocopy            use a 'zero copy' method of sending data
  -O, --omit N              omit the first n seconds
  -T, --title str           prefix every output line with this string
  --get-server-output       get results from server
  --udp-counters-64bit      use 64-bit counters in UDP test packets

